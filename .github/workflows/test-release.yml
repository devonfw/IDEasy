name: GraalVM Native Image builds
on: push
jobs:
  build-natives:
    name: Build native images
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]

    steps:
      - uses: actions/checkout@v3
        with:
          ref: feature/release-workflow

      - uses: graalvm/setup-graalvm@v1
        with:
          java-version: '17.0.7'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          native-image-job-reports: 'true'

      - name: Build native images with maven plugin
        shell: bash
        run: |
          maven_config="$(cat .mvn/maven.config)"
          current_version="${maven_config/#*-Drevision=}"
          current_version="${current_version/ */}"
          cd cli
          mvn -B -ntp -Pnative -DskipTests=true package
          cd target
          tar -cvf cli-${current_version}-${{ runner.os }}.tar cli*
          ls -lR

      - uses: actions/upload-artifact@v3
        with:
          name: natives
          path: ide/package/target/cli*.tar

  attach-artifacts:
    name: Attach native images and create release
    runs-on: ubuntu-latest
    needs: [build-natives]

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: '17'
      - uses: actions/download-artifact@v3
      - name: Create tar.gz archives for release
        run: |
          maven_config="$(cat .mvn/maven.config)"
          current_version="${maven_config/#*-Drevision=}"
          current_version="${current_version/ */}"
          mvn -B -ntp -DskipTests=true -Dstyle.color=always install
          
          windows_name=cli-${current_version}-Windows.tar
          mv ./natives/${windows_name} ./cli/
          gzip ./cli/${windows_name}
          
          macos_name=cli-${current_version}-macOS.tar
          mv ./natives/${macos_name} ./cli/
          gzip ./cli/${macos_name}
          
          linux_name=cli-${current_version}-Linux.tar
          mv ./natives/${linux_name} ./cli/
          gzip ./cli/${linux_name}
          ls -R
          gh release create ${current-version} ./cli/*.tar.gz

        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
