cmd.--version=Print the version of IDEasy.
cmd.--version.detail=TODO --version
cmd.aws=Tool commandlet for AWS CLI.
cmd.aws.detail=The AWS Command Line Interface (AWS CLI) is an open source tool for managing AWS resources. Detailed documentation can be found at https://docs.aws.amazon.com/cli/
cmd.az=Tool commandlet for Azure CLI.
cmd.az.detail=The Azure Command-Line Interface (CLI) is a tool for creating and managing Azure resources. Detailed documentation can be found at https://learn.microsoft.com/en-us/cli/azure/
cmd.cobigen=Tool commandlet for Cobigen (code-generator).
cmd.cobigen.detail=TODO cobigen
cmd.complete=Internal commandlet for bash auto-completion.
cmd.complete.detail=TODO complete
cmd.create=Create a new IDEasy project.
cmd.create.detail=TODO create
cmd.create.val.project=The name of the new project that will be created.
cmd.docker=Tool commandlet for Docker.
cmd.docker.detail=Docker is an open platform for creating, managing, and running applications in lightweight, isolated containers. Detailed documentation of the Docker Command Line Interface can be found at https://docs.docker.com/engine/reference/commandline/cli/
cmd.dotnet=Tool commandlet for dotnet.
cmd.dotnet.detail=The .NET CLI (Command Line Interface) is a cross-platform tool for building, running, and managing .NET applications. Detailed documentation can be found at https://docs.microsoft.com/en-us/dotnet/core/tools/
cmd.eclipse=Tool commandlet for Eclipse (IDE).
cmd.eclipse.detail=Eclipse IDE is an open-source Integrated Development Environment for developing applications in Java, C++, and other programming languages. Detailed documentation can be found at https://www.eclipse.org/documentation/
cmd.env=Print the environment variables to set and export.
cmd.env.detail=TODO env
cmd.env.opt.--bash=Convert Windows path syntax to bash for usage in git-bash.
cmd.gcviewer=Tool commandlet for GC Viewer (View garbage collector logs of Java).
cmd.gcviewer.detail=GCViewer is a tool for analyzing and visualizing Java garbage collection logs. Detailed documentation can be found at https://github.com/chewiebug/GCViewer
cmd.get-edition=Get the edition of the selected tool.
cmd.get-edition.detail=If the selected tool is installed, the installed edition is printed, otherwise the configured edition that would be installed. The settings can be changed using the 'ide set-edition' command.
cmd.get-version=Get the version of the selected tool.
cmd.get-version.detail=If the selected tool is installed, the installed version is printed, otherwise the configured version that would be installed. The settings can be changed using the 'ide set-version' command.
cmd.gh=Tool commandlet for GitHub CLI.
cmd.gh.detail=GitHub CLI (Command Line Interface) allows to interact with GitHub repositories, issues, and pull requests from the command line. Detailed documentation can be found at https://cli.github.com/manual/
cmd.graalvm=Tool commandlet for GraalVm (Java with native-image).
cmd.graalvm.detail=GraalVM is a high-performance runtime that supports multiple languages and execution modes. Detailed documentation can be found at https://www.graalvm.org/docs/
cmd.gradle=Tool commandlet for Gradle (Build-Tool).
cmd.gradle.detail=Gradle is a build automation tool for Java, Kotlin, and other JVM-based languages. Detailed documentation can be found at https://docs.gradle.org/
cmd.helm=Tool commandlet for Helm (Kubernetes Package Manager).
cmd.helm.detail=Helm is a package manager for Kubernetes that simplifies deploying and managing applications. Detailed documentation can be found at https://helm.sh/docs/
cmd.help=Prints this help.
cmd.help.detail=To get help details about a commandlet, simply call "ide help <commandlet>".
cmd.install=Install the selected tool.
cmd.install.detail=To see all tools available for installation, call "ide help"
cmd.intellij=Tool commandlet for IntelliJ (IDE)
cmd.intellij.detail=IntelliJ is a popular Integrated Development Environment for Java developed by JetBrains. Detailed documentation can be found at https://www.jetbrains.com/idea/documentation/
cmd.jasypt=Tool commandlet for Jasypt (encryption/decryption).
cmd.jasypt.detail=Jasypt is a library for encrypting and decrypting sensitive data in Java applications. Detailed documentation can be found at http://www.jasypt.org/
cmd.jasypt.val.command=Modes (encrypt | decrypt)
cmd.jasypt.val.masterPassword=master password.
cmd.jasypt.val.secret=The secret to be encrypted or decrypted.
cmd.java=Tool commandlet for Java (OpenJDK).
cmd.java.detail=TODO Java
cmd.jmc=Tool commandlet for JDK Mission Control (performance analysis).
cmd.jmc.detail=JDK Mission Control is a profiling and monitoring tool for Java applications. Detailed documentation can be found at https://docs.oracle.com/en/java/java-components/jdk-mission-control/
cmd.kotlinc=Tool commandlet for Kotlin (compiler for JRE language).
cmd.kotlinc.detail=Kotlin Compiler (kotlinc) is the command-line tool for compiling Kotlin code. Detailed documentation can be found at https://kotlinlang.org/docs/home.html
cmd.kotlincnative=Tool commandlet for Kotlin-Native (compiler for JRE language).
cmd.kotlincnative.detail=Kotlin/Native Compiler (kotlincnative) compiles Kotlin code to native executables. Detailed documentation can be found at https://kotlinlang.org/docs/reference/native-overview.html
cmd.lazydocker=Tool commandlet for LazyDocker.
cmd.lazydocker.detail=Lazydocker is a simple terminal UI for both docker and docker-compose. Detailed documentation can be found at https://github.com/jesseduffield/lazydocker
cmd.list-editions=List the available editions of the selected tool.
cmd.list-editions.detail=TODO list-editions
cmd.list-versions=List the available versions of the selected tool.
cmd.list-versions.detail=TODO list-versions
cmd.mvn=Tool commandlet for Maven (Build-Tool).
cmd.mvn.detail=Apache Maven is a build automation and dependency management tool for Java projects. Detailed documentation can be found at https://maven.apache.org/guides/index.html
cmd.node=Tool commandlet for Node.js (JavaScript runtime).
cmd.node.detail=Node.js is a JavaScript runtime environment for server-side applications. Detailed documentation can be found at https://nodejs.org/en/docs/
cmd.npm=Tool commandlet for Npm (JavaScript Node Package Manager).
cmd.npm.detail=npm (Node Package Manager) is used for managing JavaScript packages. Detailed documentation can be found at https://docs.npmjs.com/
cmd.oc=Tool commandlet for Openshift CLI (Kubernetes management tool).
cmd.oc.detail=OpenShift CLI (oc) is a command-line tool for managing OpenShift clusters. Detailed documentation can be found at https://docs.openshift.com/
cmd.pgadmin=Tool commandlet for pgAdmin.
cmd.pgadmin.detail=pgAdmin is an open source management tool for PostgreSQL and derivative relational databases. Detailed documentation can be found at https://www.pgadmin.org/docs/pgadmin4/latest/index.html
cmd.quarkus=Tool commandlet for Quarkus (framework for cloud-native apps).
cmd.quarkus.detail=Quarkus is a Kubernetes-native Java framework for building cloud-native applications. Detailed documentation can be found at https://quarkus.io/
cmd.repository=Setup pre-configured git repositories (clone, build, import).
cmd.repository.detail=TODO repository
cmd.repository.val.repository=The name of the properties file of the pre-configured git repository to set up, omit to set up all active repositories.
cmd.set-edition=Set the edition of the selected tool.
cmd.set-edition.detail=This will set the according tool edition variable in your configuration file. If you want to roll out such change and share it with your team, you can commit and push your settings git repository.
cmd.set-version=Set the version of the selected tool.
cmd.set-version.detail=This will set the according tool version variable in your configuration file. If you want to roll out such change and share it with your team, you can commit and push your settings git repository.
cmd.set-version.val.version=The tool version to set.
cmd.shell=Commandlet to start built-in shell with advanced auto-completion.
cmd.shell.detail=TODO shell
cmd.sonar=Tool commandlet for SonarQube.
cmd.sonar.detail=SonarQube is a platform for continuous inspection of code quality. Detailed documentation can be found at https://docs.sonarqube.org/
cmd.sonar.val.command=Action to perform (START|STOP|ANALYZE)
cmd.terraform=Tool commandlet for Terraform.
cmd.terraform.detail=Terraform is an infrastructure as code tool for managing cloud resources. Detailed documentation can be found at https://www.terraform.io/docs/index.html
cmd.tomcat=Tool commandlet for Tomcat
cmd.tomcat.detail=Tomcat is an open-source web server and Servlet container for Java code.
cmd.tomcat.val.command=Action to perform ( START | STOP )
cmd.uninstall=Uninstall the selected tool.
cmd.uninstall.detail=TODO uninstall
cmd.update=Pull your settings and apply updates (software, configuration and repositories).
cmd.update.detail=TODO update
cmd.vscode=Tool commandlet for Visual Studio Code (IDE).
cmd.vscode.detail=Visual Studio Code (VS Code) is a popular code editor developed by Microsoft. Detailed documentation can be found at https://code.visualstudio.com/docs/
commandlets=Available commandlets:
opt.--batch=enable batch mode (non-interactive).
opt.--debug=enable debug logging.
opt.--force=enable force mode.
opt.--locale=the locale (e.g. '--locale=de' for German language).
opt.--offline=enable offline mode (skip updates or git pull, fail downloads or git clone).
opt.--quiet=disable info logging (only log success, warning or error).
opt.--skip-repositories=skip the setup of repositories.
opt.--skip-tools=skip the installation/update of tools.
opt.--trace=enable trace logging.
opt.--version=Print the IDE version and exit.
options=Options:
usage=Usage:
val.args=The commandline arguments to pass to the tool.
val.commandlet=The selected commandlet (use "ide help" to list all commandlets).
val.edition=The tool edition.
val.settingsRepository=The settings git repository with the IDEasy configuration for the project.
val.tool=The tool commandlet to select.
val.version=The tool version.
values=Values:
version-banner=Current version of IDE is {}
