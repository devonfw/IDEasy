<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.devonfw.tools.IDEasy.dev</groupId>
    <artifactId>ide</artifactId>
    <version>dev-SNAPSHOT</version>
    <relativePath>../pom.xml</relativePath>
  </parent>
  <groupId>com.devonfw.tools.IDEasy</groupId>
  <artifactId>ide-cli</artifactId>
  <version>${revision}</version>
  <name>${project.artifactId}</name>
  <properties>
    <mainClass>com.devonfw.tools.ide.cli.Ideasy</mainClass>
    <imageName>ideasy</imageName>
    <native.maven.plugin.version>0.10.2</native.maven.plugin.version>
    <assembly.maven.plugin.version>3.7.1</assembly.maven.plugin.version>
    <jline.version>3.24.1</jline.version>
    <jansi.version>2.4.0</jansi.version>
  </properties>

  <dependencies>
    <!-- unpack tar, gzip, bzip2 -->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-compress</artifactId>
      <version>1.23.0</version>
    </dependency>
    <!-- JSON and XML support -->
    <dependency>
      <groupId>javax.json</groupId>
      <artifactId>javax.json-api</artifactId>
      <version>1.1.4</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish</groupId>
      <artifactId>javax.json</artifactId>
      <version>1.1.4</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>2.14.1</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jsr310</artifactId>
      <version>2.14.1</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <artifactId>jackson-dataformat-xml</artifactId>
      <version>2.14.1</version>
    </dependency>
    <!-- Logging (only for URL-Updaters) -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>2.0.12</version>
      <!--optional>true</optional-->
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.5.3</version>
      <!--optional>true</optional-->
    </dependency>
    <!-- Needed for WireMock test support -->
    <dependency>
      <groupId>com.github.tomakehurst</groupId>
      <artifactId>wiremock-jre8</artifactId>
      <version>2.35.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>me.tongfei</groupId>
      <artifactId>progressbar</artifactId>
      <version>0.10.0</version>
    </dependency>
    <dependency>
      <groupId>org.jline</groupId>
      <artifactId>jline</artifactId>
      <version>${jline.version}</version>
    </dependency>
    <dependency>
      <groupId>org.fusesource.jansi</groupId>
      <artifactId>jansi</artifactId>
      <version>${jansi.version}</version>
    </dependency>
    <dependency>
      <!-- required for advanced mocking -->
      <groupId>net.bytebuddy</groupId>
      <artifactId>byte-buddy</artifactId>
      <version>1.14.15</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <!-- Build an executable JAR -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <manifest>
              <addClasspath>true</addClasspath>
              <classpathPrefix>lib/</classpathPrefix>
              <mainClass>${mainClass}</mainClass>
            </manifest>
          </archive>
        </configuration>
      </plugin>
      <!-- Copy Resources -->
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.3.1</version>
        <executions>
          <execution>
            <id>copy-resources</id>
            <phase>validate</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/package</outputDirectory>
              <resources>
                <resource>
                  <directory>src/main/package</directory>
                  <filtering>true</filtering>
                  <excludes>
                    <exclude>**/*.bak</exclude>
                    <exclude>system/**/*</exclude>
                  </excludes>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>


  <profiles>
    <!-- Builds the native image and archives it with the documentation from the github artifact -->
    <profile>
      <id>native</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.graalvm.buildtools</groupId>
            <artifactId>native-maven-plugin</artifactId>
            <version>${native.maven.plugin.version}</version>
            <extensions>true</extensions>
            <executions>
              <execution>
                <id>build-native</id>
                <goals>
                  <goal>compile-no-fork</goal>
                </goals>
                <phase>package</phase>
              </execution>
              <execution>
                <id>test-native</id>
                <goals>
                  <goal>test</goal>
                </goals>
                <phase>test</phase>
              </execution>
            </executions>
            <configuration>
              <metadataRepository>
                <enabled>true</enabled>
              </metadataRepository>
              <agent>
                <enabled>true</enabled>
              </agent>
              <imageName>${imageName}</imageName>
              <buildArgs>
                <arg>--enable-url-protocols=http,https</arg>
                <arg>-H:IncludeResources="nls/.*"</arg>
                <arg>--initialize-at-build-time=org.apache.commons.compress</arg>
              </buildArgs>
            </configuration>
          </plugin>
          <!-- Assembly Plugin -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-assembly-plugin</artifactId>
            <version>${assembly.maven.plugin.version}</version>
            <executions>
              <execution>
                <id>create-distribution</id>
                <phase>package</phase>
                <goals>
                  <goal>single</goal>
                </goals>
                <configuration>
                  <finalName>${project.artifactId}-${revision}</finalName>
                  <appendAssemblyId>true</appendAssemblyId>
                  <descriptors>
                    <descriptor>/src/main/assembly/release-${ideasy.assembly.id}.xml</descriptor>
                  </descriptors>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- Attaches artifacts stored in cli/target/*.tgz to the maven build, moves them to documentation/target/nexus-staging/.../*.tgz and deploys them with the name defined in the classifier -->
    <profile>
      <id>deploy</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <version>3.4.0</version>
            <executions>
              <execution>
                <id>attach-artifacts</id>
                <phase>package</phase>
                <goals>
                  <goal>attach-artifact</goal>
                </goals>
                <configuration>
                  <artifacts>
                    <artifact>
                      <file>${project.build.directory}/${project.artifactId}-${revision}-windows_x86_64.tar.gz</file>
                      <type>tar.gz</type>
                      <classifier>windows-x64</classifier>
                    </artifact>
                    <artifact>
                      <file>${project.build.directory}/${project.artifactId}-${revision}-linux_x86_64.tar.gz</file>
                      <type>tar.gz</type>
                      <classifier>linux-x64</classifier>
                    </artifact>
                    <artifact>
                      <file>${project.build.directory}/${project.artifactId}-${revision}-osx_x86_64.tar.gz</file>
                      <type>tar.gz</type>
                      <classifier>mac-x64</classifier>
                    </artifact>
                    <artifact>
                      <file>${project.build.directory}/${project.artifactId}-${revision}-osx_aarch_64.tar.gz</file>
                      <type>tar.gz</type>
                      <classifier>mac-arm</classifier>
                    </artifact>
                  </artifacts>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
